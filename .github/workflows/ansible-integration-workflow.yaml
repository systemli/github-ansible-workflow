---
name: Integration

on:
  workflow_call:
    inputs:
      distros:
        required: false
        description: "List of distributions to test against the Role"
        type: string
        default: '[ "debian11", "debian10" ]'
      default-branch:
        required: false
        description: "Default branch of the repository. Default: main"
        type: string
        default: "main"
      python-dependencies:
        required: false
        description: "Default pip dependencies for molecule"
        type: string
        default: |
          molecule[docker]==3.6.1
          molecule-goss
      role-dependencies:
        required: false
        description: "Default role dependencies for ansible (empty)"
        type: string
        default: ""
      molecule-config:
        required: false
        description: "Configuration for molecule"
        type: string
        default: |
          ---
          driver:
            name: docker
          platforms:
            - name: instance
              image: "geerlingguy/docker-${MOLECULE_DISTRO:-debian10}-ansible:latest"
              command: ${MOLECULE_DOCKER_COMMAND:-""}
              volumes:
                - /sys/fs/cgroup:/sys/fs/cgroup:ro
              privileged: true
              pre_build_image: true
          provisioner:
            name: ansible
            playbooks:
              converge: ../default/converge.yml
      molecule-verifier-test-directory:
        required: false
        description: "Molecule Verifier Test Directory"
        type: string
        default: "molecule/default/tests"
    secrets:
      galaxy-token:
        required: true
        description: "Token to upload the Role to Ansible Galaxy"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Ansible Lint
        uses: ansible-community/ansible-lint-action@v6

      - name: YAMLLint
        uses: ibiqlik/action-yamllint@v3

  test:
    name: Molecule
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        distro: ${{ fromJSON(inputs.distros) }}
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup yq
        uses: mikefarah/yq@v4.25.2

      - name: Prepare Molecule Tests
        run: |
          # Creating required directories
          mkdir -p molecule/github
          # Writing required packages to requirements.txt (to cached)
          echo "${{ inputs.python-dependencies }}" > molecule/requirements.txt
          # Writing molecule config for docker
          echo "${{ inputs.molecule-config}}" > molecule/github/molecule.yml
          # Writing ansible role requirements
          echo "${{ inputs.role-dependencies }}" > molecule/requirements.yml

          # Add prepare playbook if exists
          if test -f "molecule/default/prepare.yml"; then
            yq e --inplace '.provisioner.playbooks += {"prepare":"../default/prepare.yml"}' molecule/github/molecule.yml
          fi

          # Add verify playbook if exists
          if test -f "molecule/default/verify.yml"; then
            yq e --inplace '.provisioner.playbooks += {"verify":"../default/verify.yml"}' molecule/github/molecule.yml
          fi

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
          cache: "pip"
          cache-dependency-path: "molecule/requirements.txt"

      - name: Install Dependencies
        run: pip3 install -r molecule/requirements.txt

      - name: Install Ansible Role Requirements
        run: ansible-galaxy install -r molecule/requirements.yml
        if: inputs.role-dependencies != ''

      - name: Molecule Test
        run: molecule test -s github
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          MOLECULE_DISTRO: ${{ matrix.distro }}
          MOLECULE_VERIFIER_TEST_DIRECTORY: ${{ inputs.molecule-verifier-test-directory }}

  release:
    name: Ansible Galaxy
    runs-on: ubuntu-20.04
    needs: [test]
    if: github.ref_name == inputs.default-branch || contains(github.ref, 'refs/tags/')
    steps:
      - name: Publish to Ansible Galaxy
        uses: robertdebock/galaxy-action@1.2.0
        with:
          galaxy_api_key: ${{ secrets.galaxy-token }}
